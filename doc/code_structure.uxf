<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <zoom_level>5</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>275</x>
      <y>195</y>
      <w>265</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>*file_read*
--
void read_file(FILE *fp, int start_byte, int end_byte, char *buffer);
int get_file_size(FILE *fp);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>275</x>
      <y>140</y>
      <w>265</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>*stream*
--
static void stream(char *ip_addr, char *port, FILE *fp);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>630</x>
      <y>245</y>
      <w>395</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>*boss_server*
--
#define CLOSE_CONN -1
typedef struct fqueue_t;
typedef struct pool_t;
typedef struct rx_args_t;
typedef struct queue_args_t;
--
pool_t* pool_init();
void server_start(char *server_port, pool_t *pool);
int rcv_sock_init(char *server_port);
static void sigchld_handler(int s);
static struct sigaction sig_init();
static void accept_loop(int sockfd, pool_t* pl);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>275</x>
      <y>245</y>
      <w>340</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>*split*
--
#define INITIAL_CAPACITY 1000
#define CONN_NUMBER 2
#define CLOSED -1
#define ACTIVE 1
#define PASSIVE 0
#define QUEUER_BUF_SIZE 10000
#define WAIT_LIMIT 10
#define QUEUE_NUM 0
struct ipv4_packet;
struct cb_args_syn;
typedef struct proxy_buff;
struct split_args;
struct cb_cntrl_args;
struct link;
struct link_control;
struct cb_tx_args;
struct cb_nfq_args;
--
static int nfqueue_get_syn(struct nfq_q_handle *qh, struct nfgenmsg *nfmsg, 
                           struct nfq_data *nfa, void *data);
static void* queuer_loop(void __attribute__((unused)) *unused);
static void* pass_payload(void *args);
static struct listen_args* set_listen_args(char *dest_ip, 
        char *dest_port, char *local_part);
static int set_tx_sock(char *dest_ip, char *dest_port); 
static int add2buff(proxy_buff *buff, char *raw_buf, int recv_count); 
static struct split_args* set_split_args(char *local_port);
static void* get_payload(void *args); 
static struct cb_cntrl_args* set_controller_args(char *dest_ip, 
        char *dest_port, proxy_buff *buff); 
static void set_link(char *dest_ip, char *dest_port, struct link *tcp_link);
static void *run_controller(void *args);
static void *tx_chain(void *args); 
static void split_loop(int sockfd, proxy_buff *buff);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>675</x>
      <y>490</y>
      <w>360</w>
      <h>255</h>
    </coordinates>
    <panel_attributes>*pqueue*
--
#define PRI_CONVERT(x) ((-1 * x) -1)
typedef unsigned long long pqueue_pri_t;
typedef pqueue_pri_t (*pqueue_get_pri_f)(void *a);
typedef void (*pqueue_set_pri_f)(void *a, pqueue_pri_t pri);
typedef int (*pqueue_cmp_pri_f)(pqueue_pri_t next, pqueue_pri_t curr);
typedef size_t (*pqueue_get_pos_f)(void *a);
typedef void (*pqueue_set_pos_f)(void *a, size_t pos);
typedef void (*pqueue_print_entry_f)(FILE *out, void *a);
typedef struct pqueue_t;
typedef struct node_t;
--
int cmp_pri(pqueue_pri_t next, pqueue_pri_t curr);
void set_pri(void *a, pqueue_pri_t pri);
pqueue_pri_t get_pri(void *a);
size_t get_pos(void *a);
void set_pos(void *a, size_t pos);
pqueue_t *
pqueue_init(size_t n, pqueue_cmp_pri_f cmppri, pqueue_get_pri_f getpri,
            pqueue_set_pri_f setpri, pqueue_get_pos_f getpos, pqueue_set_pos_f setpos);
void pqueue_free(pqueue_t *q);
size_t pqueue_size(pqueue_t *q);
int pqueue_insert(pqueue_t *q, void *d);
pqueue_change_priority(pqueue_t *q, pqueue_pri_t new_pri, void *d);
void *pqueue_pop(pqueue_t *q);
int pqueue_remove(pqueue_t *q, void *d);
void *pqueue_peek(pqueue_t *q);
void pqueue_print(pqueue_t *q, FILE *out, pqueue_print_entry_f print);
void pqueue_dump(pqueue_t *q, FILE *out, pqueue_print_entry_f print);
int pqueue_is_valid(pqueue_t *q);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>630</x>
      <y>375</y>
      <w>205</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>*forward*
--
#define INIT_QUEUE_SIZE sizeof(char*) * 1000;
#define SLEEP 0;
#define SEND 1;
#define WAIT_TIME 2;
--
void *wait2forward(void *args);
static int fill_queue(pqueue_t *pq, fqueue_t *fq);
static void forward_data(fqueue_t *fq, 
        int pack_cnt);
static void forward_loop(pool_t *pl, fqueue_t *fq);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>575</x>
      <y>140</y>
      <w>205</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*network*
--
#define BLOCKSIZE 6
#define BACKLOG 10
#define PACKET_SIZE sizeof(encaps_packet_t)
--
uint32_t get_in_portnum(struct sockaddr *sa);
void* get_in_ipaddr(struct sockaddr *sa);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>815</x>
      <y>140</y>
      <w>210</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>*receive*
--
static void get_packets(char *port, 
        FILE *fp, FILE *logp);
static void recv_loop(struct pollfd *pfd, 
        int sockfd, FILE *fp, FILE *logp);
static int sock_init(char *port);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>845</x>
      <y>375</y>
      <w>180</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>*link_receptor*
--
void *rx_chain(void *args);
static void add2queue(pool_t *pl, 
        unsigned char *raw_packet);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>615</x>
      <y>195</y>
      <w>24</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>15;15;15;50</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>765</x>
      <y>125</y>
      <w>59</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>15;15;50;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>600</x>
      <y>195</y>
      <w>24</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>15;15;15;50</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>525</x>
      <y>125</y>
      <w>59</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>50;15;15;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>915</x>
      <y>405</y>
      <w>24</w>
      <h>94</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;85;15;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>915</x>
      <y>340</y>
      <w>24</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;35;15;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>720</x>
      <y>455</y>
      <w>24</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;35;15;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>720</x>
      <y>340</y>
      <w>24</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;35;15;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>390</x>
      <y>160</y>
      <w>24</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;35;15;15</additional_attributes>
  </element>
</diagram>
